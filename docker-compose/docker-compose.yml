services:
  config-service:
    build:
      context: ../config-service
    container_name: config-service
    ports:
      - "8888:8888"
    networks:
      - micro-service-network

  discover-service:
    build:
      context: ../discovery-service
    container_name: discover-service
    ports:
      - "8761:8761"
    networks:
      - micro-service-network
    depends_on:
      - config-service

  api-gateway-service:
    build:
      context: ../api-gateway/gateway-server
    container_name: api-gateway-service
    ports:
      - "8000:8000"
    networks:
      - micro-service-network
    environment:
      - "spring.config.import=optional:configserver:http://config-service:8888"
      - "spring.rabbitmq.host=rabbitmq"
      - "eureka.client.serviceUrl.defaultZone=http://discover-service:8761/eureka/"
    depends_on:
      - config-service
      - discover-service
      - rabbitmq

  user-service:
    build:
      context: ../user-service
    container_name: user-service
    networks:
      - micro-service-network
    environment:
      - "spring.profiles.active=prod"
      # ✅삽질 해결 : application.yml에 적용한 방식 그대로 적용 필요
      - #          - compose depends_on 만으로는 순차적으로 켜지지 않음 기동 후 "busrefresh" 혹은 "refresh" 또는 기동 순서를 변경 하는 등 작업 필요
      - "spring.config.import=optional:configserver:http://config-service:8888"
      - "spring.rabbitmq.host=rabbitmq"
      - "eureka.client.serviceUrl.defaultZone=http://discover-service:8761/eureka/"
      - "management.zipkin.tracing.endpoint=http://zipkin:9411/api/v2/spans"
    depends_on:
      - api-gateway-service

  order-service:
    build:
      context: ../order-service
    container_name: order-service
    networks:
      - micro-service-network
    environment:
      - "spring.config.import=optional:configserver:http://config-service:8888"
      - "spring.rabbitmq.host=rabbitmq"
      - "eureka.client.serviceUrl.defaultZone=http://discover-service:8761/eureka/"
      - "spring.datasource.url=jdbc:mariadb://mariadb:3306/mydb"
      - "management.zipkin.tracing.endpoint=http://zipkin:9411/api/v2/spans"
      # ✅ 9092가 아닌 내부 포트 사용
      - "kafka.url=kafka:19092"
    depends_on:
      - api-gateway-service

  catalog-service:
    build:
      context: ../catalog-service
    container_name: catalog-service
    networks:
      - micro-service-network
    environment:
      - "eureka.client.serviceUrl.defaultZone=http://discover-service:8761/eureka/"
      - "management.zipkin.tracing.endpoint=http://zipkin:9411/api/v2/spans"
      # ✅ 9092가 아닌 내부 포트 사용
      - "kafka.url=kafka:19092"
    depends_on:
      - api-gateway-service

  rabbitmq:
    image: rabbitmq:3.12-management  # 관리 UI 포함된 버전
    container_name: rabbitmq
    ports:
      - "5672:5672"    # AMQP 프로토콜 포트
      - "15672:15672"  # 웹 UI 포트
      - "4369:4369"    # 클러스터링 포트가
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    volumes:
      - ./rabbitmq-volume:/var/lib/rabbitmq  # 현재 디렉토리의 `data` 폴더를 마운트
    networks:
      - micro-service-network

  mariadb:
    image: mariadb:latest
    container_name: mariadb
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: "123"
      MYSQL_DATABASE: "mydb"
    volumes:
      - ./mariadb-volume:/var/lib/mysql
    networks:
      - micro-service-network

networks:
  micro-service-network:
    #driver: bridge
    # ✅ "docker network create --driver bridge --attachable micro-service-network" 명령어를 통해 network를 생성
    #     - 서로 다른 docker-compose.yml을 연결하여 사용하기 위함
    external: true  # 이미 생성된 네트워크 사용