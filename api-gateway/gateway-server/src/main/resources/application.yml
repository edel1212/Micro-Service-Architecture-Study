server:
  port: 8000

spring:
  application:
    name: gateway-service

  # RabbitMQ Setting
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: admin
    password: admin

  # Config Server Setting
  config:
    import: optional:configserver:http://localhost:8888
  profiles:
    active: dev
  cloud:
    # Config Server Setting - target yml 파일 지정
    config:
      name: ecommerce  # `ecommerce.yml`을 읽도록 설정
    gateway:
      routes:
        - id: user-service
          uri: lb://USER-SERVICE
          # POST - login 요청이 들어 욜 경우
          predicates:
            - Path=/user-service/login
            - Method=POST
          # Cookie 삭제 및 user-service 제거
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/users
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/actuator/**
            - Method=GET,POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/**
            - Method=GET
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
           # - AuthorizationHeaderFilter 임시 주석
        - id: catalog-service
          uri: lb://CATALOG-SERVICE
          predicates:
            - Path=/catalog-service/**
        - id: order-service
          uri: lb://ORDER-SERVICE
          predicates:
            - Path=/order-service/**

# Actuator 설정
management:
  endpoints:
    web:
      exposure:
        # /actuator/** 로 사용할 기능 설정
        include: refresh, health, beans, httpexchanges, busrefresh, info, metrics, prometheus

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
  service-url:
    defaultZone: http://localhost:8761/eureka
