plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.2'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.yoo'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2024.0.0")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	// h2
	runtimeOnly 'com.h2database:h2'
	// jpa
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	// validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	// security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'
	// Jwt https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-api
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.12.6'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.12.6'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.12.6'

	// Config Client
	implementation 'org.springframework.cloud:spring-cloud-starter'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'

	// Actuator
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	// Spring Cloud Bus - AMQP(RabbitMQ)
	implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-bus-amqp', version: '4.2.0'

	// Open Feign
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

	// Circuitbreaker-resilience4j가
	implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'

	// Zipkin
	// ✅ actuator 주입 또한 필수 상단에 주입하였기에 제외
	implementation 'io.micrometer:micrometer-tracing-bridge-brave'
	implementation 'io.zipkin.reporter2:zipkin-reporter-brave'
	implementation 'io.github.openfeign:feign-micrometer' // ✅ feign 사용 시 zipkin 과 traceId 공유를 위해 필요
}

tasks.withType(JavaCompile) {
	options.compilerArgs += "-Xlint:deprecation"
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
